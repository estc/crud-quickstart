package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
#if(${table.serviceInterface})
import ${package.Service}.${table.serviceName};
#end
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import cn.wnhyang.generator.pojo.PageResult;

/**
 * $!{table.comment} 服务实现类
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class ${table.serviceImplName} implements ${table.serviceName} {

    private final ${entity}Mapper ${table.entityPath}Mapper;

    @Override
    @Transactional(rollbackFor = Exception.class)
    public Long create(${entity}VO ${table.entityPath}VO) {
        ${table.entityPath}Mapper.insert(${table.entityPath}VO);
        return ${table.entityPath}.getId();
    }

    @Override
    @Transactional(rollbackFor = Exception.class)
    public void update(${entity}VO ${table.entityPath}VO) {
        ${table.entityPath}Mapper.updateById(${table.entityPath}VO);
    }

    @Override
    @Transactional(rollbackFor = Exception.class)
    public void delete(Long id) {
        ${table.entityPath}Mapper.deleteById(id);
    }

    @Override
    public ${entity} get(Long id) {
        return ${table.entityPath}Mapper.selectById(id);
    }

    @Override
    public PageResult<${entity}> page(${entity}VO ${table.entityPath}VO) {
        return ${table.entityPath}Mapper.selectPage(${table.entityPath}VO);
    }

}
